name: Mirror Helper

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - parse-selection
          - mirror-specific
      pr_number:
        description: 'PR number'
        required: true
        type: string
      images:
        description: 'Images to mirror (JSON array)'
        required: false
        type: string

jobs:
  parse-selection:
    if: github.event.inputs.action == 'parse-selection'
    runs-on: ubuntu-latest
    steps:
      - name: Parse checkbox selection
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};

            // Get the latest comment with checkboxes
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const checklistComment = comments.reverse().find(comment =>
              comment.body.includes('🐳 Docker Images to Mirror')
            );

            if (!checklistComment) {
              core.setFailed('No checklist comment found');
              return;
            }

            // Parse selected images from comment
            // Note: This is a simplified version. In practice, you'd need
            // a more sophisticated parser or use GitHub's task list API
            const lines = checklistComment.body.split('\n');
            const selectedImages = [];

            lines.forEach(line => {
              if (line.includes('[x]') && line.includes('`')) {
                // Extract image info from the line
                const match = line.match(/`([^`]+)`.*`([^`]+)`/);
                if (match) {
                  selectedImages.push({
                    original: match[1],
                    mirror: match[2]
                  });
                }
              }
            });

            console.log(`Found ${selectedImages.length} selected images`);

            // Trigger mirror workflow for selected images
            if (selectedImages.length > 0) {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'mirror-helper.yml',
                ref: 'main',
                inputs: {
                  action: 'mirror-specific',
                  pr_number: prNumber.toString(),
                  images: JSON.stringify(selectedImages)
                }
              });
            }

  mirror-specific:
    if: github.event.inputs.action == 'mirror-specific'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to mirror registry
        uses: docker/login-action@v3
        with:
          registry: registry.internal.company.com
          username: ${{ secrets.MIRROR_REGISTRY_USERNAME }}
          password: ${{ secrets.MIRROR_REGISTRY_PASSWORD }}

      - name: Mirror selected images
        id: mirror
        run: |
          IMAGES='${{ github.event.inputs.images }}'
          SUCCESS_COUNT=0
          FAIL_COUNT=0

          echo "$IMAGES" | jq -c '.[]' | while read -r img; do
            ORIGINAL=$(echo "$img" | jq -r '.original')
            MIRROR=$(echo "$img" | jq -r '.mirror')

            echo "Mirroring: $ORIGINAL -> $MIRROR"

            if docker pull "$ORIGINAL"; then
              docker tag "$ORIGINAL" "$MIRROR"
              if docker push "$MIRROR"; then
                echo "✅ Successfully mirrored: $ORIGINAL"
                ((SUCCESS_COUNT++))
              else
                echo "❌ Failed to push: $MIRROR"
                ((FAIL_COUNT++))
              fi
            else
              echo "❌ Failed to pull: $ORIGINAL"
              ((FAIL_COUNT++))
            fi
          done

          echo "success_count=$SUCCESS_COUNT" >> $GITHUB_OUTPUT
          echo "fail_count=$FAIL_COUNT" >> $GITHUB_OUTPUT

      - name: Update PR status
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};
            const successCount = ${{ steps.mirror.outputs.success_count || 0 }};
            const failCount = ${{ steps.mirror.outputs.fail_count || 0 }};

            const commentBody = `### 🔄 Mirror Operation Update\n\n` +
              `- Successfully mirrored: ${successCount} images\n` +
              `- Failed: ${failCount} images\n` +
              `\nTimestamp: ${new Date().toISOString()}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });

            // If all successful, approve PR
            if (failCount === 0 && successCount > 0) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                event: 'APPROVE',
                body: 'All selected Docker images have been successfully mirrored.'
              });
            }