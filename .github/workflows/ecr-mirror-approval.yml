name: ECR Mirror Approval Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  check-approval:
    # Only run for PRs with [DEVOPS-1094] in title
    if: |
      (github.event_name == 'pull_request' && startsWith(github.event.pull_request.title, '[DEVOPS-1094]')) ||
      (github.event_name == 'issue_comment' && github.event.issue.pull_request && startsWith(github.event.issue.title, '[DEVOPS-1094]')) ||
      (github.event_name == 'pull_request_review' && startsWith(github.event.pull_request.title, '[DEVOPS-1094]'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      statuses: write
      checks: write

    steps:
      - name: Get PR number
        id: pr-number
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            echo "number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
            echo "number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Check for approvals
        id: check-approvals
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUM="${{ steps.pr-number.outputs.number }}"
          REPO="${{ github.repository }}"

          echo "Checking PR #$PR_NUM for approvals..."

          # Check for +1 reactions on PR body and comments
          PLUS_ONE_COUNT=0

          # Check reactions on PR issue
          PR_REACTIONS=$(gh api "/repos/$REPO/issues/$PR_NUM/reactions" --jq '[.[] | select(.content == "+1")] | length')
          PLUS_ONE_COUNT=$((PLUS_ONE_COUNT + PR_REACTIONS))

          echo "Found $PR_REACTIONS +1 reactions on PR body"

          # Get all comments on the PR
          COMMENTS=$(gh api "/repos/$REPO/issues/$PR_NUM/comments" --jq '.[].id')

          # Check reactions on each comment
          for comment_id in $COMMENTS; do
            COMMENT_REACTIONS=$(gh api "/repos/$REPO/issues/comments/$comment_id/reactions" --jq '[.[] | select(.content == "+1")] | length')
            PLUS_ONE_COUNT=$((PLUS_ONE_COUNT + COMMENT_REACTIONS))
          done

          echo "Total +1 reactions found: $PLUS_ONE_COUNT"

          if [[ $PLUS_ONE_COUNT -ge 1 ]]; then
            echo "approved=true" >> $GITHUB_OUTPUT
            echo "✅ PR has required approvals"
          else
            echo "approved=false" >> $GITHUB_OUTPUT
            echo "❌ PR needs at least 1 +1 reaction"
          fi

      - name: Check if mirroring confirmation already posted
        if: steps.check-approvals.outputs.approved == 'true'
        id: check-confirmation
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUM="${{ steps.pr-number.outputs.number }}"

          # Check if we already posted the mirroring confirmation
          EXISTING_COMMENT=$(gh pr view $PR_NUM --json comments --jq '.comments[] | select(.body | contains("✅ ECR Mirroring Complete")) | .id' || echo "")

          if [[ -n "$EXISTING_COMMENT" ]]; then
            echo "already_posted=true" >> $GITHUB_OUTPUT
            echo "Confirmation already posted"
          else
            echo "already_posted=false" >> $GITHUB_OUTPUT
            echo "No confirmation posted yet"
          fi

      - name: Post mirroring confirmation
        if: steps.check-approvals.outputs.approved == 'true' && steps.check-confirmation.outputs.already_posted == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUM="${{ steps.pr-number.outputs.number }}"

          cat > /tmp/mirror-confirmation.md <<'EOF'
          ## ✅ ECR Mirroring Complete

          All Docker images have been successfully mirrored to ECR:

          - 🐳 Images pulled from upstream registries
          - 🏷️ Tagged for ECR repository
          - ⬆️ Pushed to `844513065301.dkr.ecr.us-east-1.amazonaws.com/mirror/`

          ### Status
          - ✅ Mirroring: **COMPLETE**
          - ✅ Images: **Available in ECR**
          - ✅ Ready to merge: **YES**

          ---
          🎉 **This PR is now safe to merge!**

          🤖 *This is a mock confirmation for testing purposes*
          EOF

          gh pr comment $PR_NUM --body-file /tmp/mirror-confirmation.md
          echo "✅ Posted mirroring confirmation to PR #$PR_NUM"

      - name: Set status check
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUM="${{ steps.pr-number.outputs.number }}"
          HEAD_SHA=$(gh pr view $PR_NUM --json headRefOid --jq '.headRefOid')

          if [[ "${{ steps.check-approvals.outputs.approved }}" == "true" ]]; then
            # Approved - set success status
            gh api "/repos/${{ github.repository }}/statuses/$HEAD_SHA" \
              -f state=success \
              -f context="ECR Mirror Approval" \
              -f description="✅ Approved for ECR mirroring (1+ reactions)" \
              -f target_url="${{ github.server_url }}/${{ github.repository }}/pull/$PR_NUM"
          else
            # Not approved - set pending/failure status
            gh api "/repos/${{ github.repository }}/statuses/$HEAD_SHA" \
              -f state=pending \
              -f context="ECR Mirror Approval" \
              -f description="⏳ Needs 1 +1 reaction to approve ECR mirroring" \
              -f target_url="${{ github.server_url }}/${{ github.repository }}/pull/$PR_NUM"
          fi

          echo "Status check updated for SHA: $HEAD_SHA"
