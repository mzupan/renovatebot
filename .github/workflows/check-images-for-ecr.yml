name: Check Images for ECR Mirror

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  check-images:
    # Only run for PRs with [DEVOPS-1094] in title
    if: startsWith(github.event.pull_request.title, '[DEVOPS-1094]')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Setup yq
        uses: mikefarah/yq@master

      - name: Get changed files
        id: changed-files
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUM="${{ github.event.pull_request.number }}"

          # Get list of changed files
          CHANGED_FILES=$(gh pr view $PR_NUM --json files -q '.files[].path')

          # Filter for Chart.yaml files
          CHART_FILES=$(echo "$CHANGED_FILES" | grep -E 'Chart\.yaml$' || true)

          if [[ -z "$CHART_FILES" ]]; then
            echo "No Chart.yaml files changed"
            echo "chart_files=" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Found Chart.yaml files:"
          echo "$CHART_FILES"

          # Save chart files for next step
          echo "$CHART_FILES" > /tmp/chart_files.txt
          echo "has_charts=true" >> $GITHUB_OUTPUT

      - name: Extract images from Helm charts
        if: steps.changed-files.outputs.has_charts == 'true'
        id: extract-images
        run: |
          ALL_IMAGES=""

          while IFS= read -r chart_file; do
            if [[ -z "$chart_file" ]]; then
              continue
            fi

            echo "Processing: $chart_file"
            CHART_DIR=$(dirname "$chart_file")

            cd "$CHART_DIR"

            # Update dependencies
            echo "Running helm dependency update in $CHART_DIR..."
            if helm dependency update; then
              echo "✅ Dependencies updated successfully"
            else
              echo "⚠️ Dependency update failed, continuing anyway..."
            fi

            # Template the chart and extract images
            echo "Running helm template to extract images..."

            # Use yq to properly parse YAML and extract image fields
            # This handles both quoted and unquoted images
            IMAGES=$(helm template . 2>/dev/null | yq eval '.. | select(has("image")) | .image' - 2>/dev/null | grep -v '^null$' | sort -u || true)

            # Fallback to grep if yq doesn't find anything
            if [[ -z "$IMAGES" ]]; then
              echo "Trying fallback grep method..."
              IMAGES=$(helm template . 2>/dev/null | grep -E '^\s*-?\s*image:\s*' | sed -E 's/.*image:\s*"?([^"]+)"?.*/\1/' | sort -u || true)
            fi

            if [[ -n "$IMAGES" ]]; then
              echo "Found images in $CHART_DIR:"
              echo "$IMAGES"
              ALL_IMAGES="${ALL_IMAGES}${IMAGES}"$'\n'
            else
              echo "No images found in $CHART_DIR"
            fi

            cd "$GITHUB_WORKSPACE"
          done < /tmp/chart_files.txt

          # Remove duplicates and empty lines
          UNIQUE_IMAGES=$(echo "$ALL_IMAGES" | sort -u | grep -v '^$' || true)

          if [[ -z "$UNIQUE_IMAGES" ]]; then
            echo "No images found"
            echo "has_images=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "All unique images found:"
          echo "$UNIQUE_IMAGES"

          # Save images to file
          echo "$UNIQUE_IMAGES" > /tmp/images.txt
          echo "has_images=true" >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: steps.extract-images.outputs.has_images == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUM="${{ github.event.pull_request.number }}"

          # Read images from file
          IMAGES=$(cat /tmp/images.txt)

          # Build comment body
          cat > /tmp/comment.md <<'EOF'
          ## 🐳 Docker Images Detected

          The following Docker images were found in the Helm charts. You may need to mirror these to your local ECR:

          ```
          EOF

          echo "$IMAGES" >> /tmp/comment.md

          cat >> /tmp/comment.md <<'EOF'
          ```

          ---

          ### ⚠️ Important Notice

          **DO NOT MERGE THIS PR YET**

          Once this PR receives **1 +1 reaction** and is merged, the image(s) above will be automatically mirrored to ECR.

          After the mirroring process completes, another automated comment will be posted confirming that it is safe to merge this PR.

          ### Next Steps
          1. Review the images above
          2. Add +1 reaction to approve mirroring
          3. Wait for automated mirroring confirmation
          4. Merge once confirmed safe

          ---
          🤖 *This comment was automatically generated by the Check Images workflow*
          EOF

          # Post comment
          gh pr comment $PR_NUM --body-file /tmp/comment.md

          echo "✅ Comment posted to PR #$PR_NUM"
